{
  "description": "Full access to functions, operations and locations.",
  "etag": "AA==",
  "includedPermissions": [
    "cloudbuild.builds.get",
    "cloudbuild.builds.list",
    "cloudfunctions.functions.call",
    "cloudfunctions.functions.create",
    "cloudfunctions.functions.delete",
    "cloudfunctions.functions.get",
    "cloudfunctions.functions.getIamPolicy",
    "cloudfunctions.functions.invoke",
    "cloudfunctions.functions.list",
    "cloudfunctions.functions.setIamPolicy",
    "cloudfunctions.functions.sourceCodeGet",
    "cloudfunctions.functions.sourceCodeSet",
    "cloudfunctions.functions.update",
    "cloudfunctions.locations.get",
    "cloudfunctions.locations.list",
    "cloudfunctions.operations.get",
    "cloudfunctions.operations.list",
    "cloudfunctions.runtimes.list",
    "eventarc.events.receiveAuditLogWritten",
    "eventarc.events.receiveEvent",
    "eventarc.locations.get",
    "eventarc.locations.list",
    "eventarc.operations.cancel",
    "eventarc.operations.delete",
    "eventarc.operations.get",
    "eventarc.operations.list",
    "eventarc.providers.get",
    "eventarc.providers.list",
    "eventarc.triggers.create",
    "eventarc.triggers.delete",
    "eventarc.triggers.get",
    "eventarc.triggers.getIamPolicy",
    "eventarc.triggers.list",
    "eventarc.triggers.setIamPolicy",
    "eventarc.triggers.undelete",
    "eventarc.triggers.update",
    "recommender.locations.get",
    "recommender.locations.list",
    "remotebuildexecution.blobs.get",
    "resourcemanager.projects.get",
    "resourcemanager.projects.list",
    "run.configurations.get",
    "run.configurations.list",
    "run.locations.list",
    "run.operations.delete",
    "run.operations.get",
    "run.operations.list",
    "run.revisions.delete",
    "run.revisions.get",
    "run.revisions.list",
    "run.routes.get",
    "run.routes.invoke",
    "run.routes.list",
    "run.services.create",
    "run.services.delete",
    "run.services.get",
    "run.services.getIamPolicy",
    "run.services.list",
    "run.services.setIamPolicy",
    "run.services.update",
    "serviceusage.quotas.get",
    "serviceusage.services.get",
    "serviceusage.services.list"
  ],
  "name": "roles/cloudfunctions.admin",
  "stage": "GA",
  "title": "Cloud Functions Admin"
}
